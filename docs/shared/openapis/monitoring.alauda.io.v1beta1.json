{
  "swagger": "2.0",
  "info": {
    "title": "Monitoring APIS",
    "version": "1.0.0",
    "description": "APIS for monitoring."
  },
  "paths": {
    "/platform/monitoring.alauda.io/v1beta1/clusters/{cluster}/metrics": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get monitoring metrics of a cluster",
        "description": "Retrieves monitoring metrics for a specified cluster.",
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the cluster"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "Start time as a 10-digit timestamp"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "End time as a 10-digit timestamp"
          },
          {
            "name": "step",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Step interval"
          },
          {
            "name": "time",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "Timestamp, defaults to current time. Mutually exclusive with start/end/step."
          },
          {
            "name": "timeout",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Timeout in seconds, default is 10s"
          },
          {
            "name": "indicators",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Metrics to query, multiple indicators separated by '|'"
          },
          {
            "name": "expr",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Native query expression, mutually exclusive with indicators"
          },
          {
            "name": "variables",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Variables for the query, formatted as 'A=v1,B=v2,C=v3'"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with list of monitoring metrics",
            "schema": {
              "$ref": "#/definitions/MetricList"
            }
          },
          "400": {
            "description": "Monitoring plugin not deployed",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "503": {
            "description": "Monitoring plugin unavailable",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/platform/monitoring.alauda.io/v1beta1/projects/{project}/metrics": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get monitoring metrics of a project",
        "description": "Retrieves monitoring metrics for a specified cluster.",
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the project"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "Start time as a 10-digit timestamp"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "End time as a 10-digit timestamp"
          },
          {
            "name": "step",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Step interval"
          },
          {
            "name": "time",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "Timestamp, defaults to current time. Mutually exclusive with start/end/step."
          },
          {
            "name": "timeout",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Timeout in seconds, default is 10s"
          },
          {
            "name": "indicators",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Metrics to query, multiple indicators separated by '|'"
          },
          {
            "name": "expr",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Native query expression, mutually exclusive with indicators"
          },
          {
            "name": "variables",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Variables for the query, formatted as 'A=v1,B=v2,C=v3'"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with list of monitoring metrics",
            "schema": {
              "$ref": "#/definitions/MetricList"
            }
          },
          "400": {
            "description": "Monitoring plugin not deployed",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "503": {
            "description": "Monitoring plugin unavailable",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/platform/monitoring.alauda.io/v1beta1/projects/{project}/clusters/{cluster}/namespaces/{namespace}/metrics": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get monitoring metrics of a namespace",
        "description": "Retrieves monitoring metrics for a specified cluster.",
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the project"
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the cluster"
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the namespace"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "Start time as a 10-digit timestamp"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "End time as a 10-digit timestamp"
          },
          {
            "name": "step",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Step interval"
          },
          {
            "name": "time",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "Timestamp, defaults to current time. Mutually exclusive with start/end/step."
          },
          {
            "name": "timeout",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Timeout in seconds, default is 10s"
          },
          {
            "name": "indicators",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Metrics to query, multiple indicators separated by '|'"
          },
          {
            "name": "expr",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Native query expression, mutually exclusive with indicators"
          },
          {
            "name": "variables",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Variables for the query, formatted as 'A=v1,B=v2,C=v3'"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with list of monitoring metrics",
            "schema": {
              "$ref": "#/definitions/MetricList"
            }
          },
          "400": {
            "description": "Monitoring plugin not deployed",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "503": {
            "description": "Monitoring plugin unavailable",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/platform/monitoring.alauda.io/v1beta1/clusters/{cluster}/variables": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get variable candidates for monitoring panels in a cluster",
        "description": "Fetches the variable candidates for monitoring panels in the specified cluster. The API permissions are the same as for metrics.",
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster."
          },
          {
            "name": "expr",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The query expression to fetch variable values."
          },
          {
            "name": "regex",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The regular expression to extract variable values."
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "Start time as a 10-digit timestamp"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "End time as a 10-digit timestamp"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with variable candidates.",
            "schema": {
              "$ref": "#/definitions/Option"
            }
          },
          "400": {
            "description": "Invalid expr",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "503": {
            "description": "Monitoring plugin unavailable",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/platform/monitoring.alauda.io/v1beta1/projects/{project}/variables": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get variable candidates for monitoring panels in a project",
        "description": "Fetches the variable candidates for monitoring panels in the specified cluster. The API permissions are the same as for metrics.",
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the project."
          },
          {
            "name": "expr",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The query expression to fetch variable values."
          },
          {
            "name": "regex",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The regular expression to extract variable values."
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "Start time as a 10-digit timestamp"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "End time as a 10-digit timestamp"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with variable candidates.",
            "schema": {
              "$ref": "#/definitions/Option"
            }
          },
          "400": {
            "description": "Invalid expr",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "503": {
            "description": "Monitoring plugin unavailable",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/platform/monitoring.alauda.io/v1beta1/projects/{project}/clusters/{cluster}/namespaces/{namespace}/variables": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get variable candidates for monitoring panels in a namespace",
        "description": "Fetches the variable candidates for monitoring panels in the specified cluster. The API permissions are the same as for metrics.",
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the project."
          },
          {
            "name": "cluster",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster."
          },
          {
            "name": "namespace",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the namespace."
          },
          {
            "name": "expr",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The query expression to fetch variable values."
          },
          {
            "name": "regex",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The regular expression to extract variable values."
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "Start time as a 10-digit timestamp"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "End time as a 10-digit timestamp"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with variable candidates.",
            "schema": {
              "$ref": "#/definitions/Option"
            }
          },
          "400": {
            "description": "Invalid expr",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          },
          "503": {
            "description": "Monitoring plugin unavailable",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        }
      }
    },
    "/platform/monitoring.alauda.io/v1beta1/clusters/{cluster}/indicators": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get metrics indicators of a cluster",
        "description": "Retrieve metrics indicators for a specified cluster.",
        "parameters": [
          {
            "name": "cluster",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "in": "query",
            "description": "Filter by indicator type",
            "required": false,
            "type": "string"
          },
          {
            "name": "alertEnabled",
            "in": "query",
            "description": "Filter indicators that support alerts",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "multipleEnabled",
            "in": "query",
            "description": "Filter indicators that support multiple alert objects",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "dashboardEnabled",
            "in": "query",
            "description": "Filter indicators that support custom dashboards",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with list of metric indicators",
            "schema": {
              "$ref": "#/definitions/IndicatorList"
            }
          }
        }
      }
    },
    "/platform/monitoring.alauda.io/v1beta1/projects/{project}/indicators": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get metrics indicators of a project",
        "description": "Retrieve metrics indicators for a specified project.",
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "description": "Name of the project",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "in": "query",
            "description": "Filter by indicator type",
            "required": false,
            "type": "string"
          },
          {
            "name": "alertEnabled",
            "in": "query",
            "description": "Filter indicators that support alerts",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "multipleEnabled",
            "in": "query",
            "description": "Filter indicators that support multiple alert objects",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "dashboardEnabled",
            "in": "query",
            "description": "Filter indicators that support custom dashboards",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with list of metric indicators",
            "schema": {
              "$ref": "#/definitions/IndicatorList"
            }
          }
        }
      }
    },
    "/platform/monitoring.alauda.io/v1beta1/projects/{project}/clusters/{cluster}/namespaces/{namespace}/indicators": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get metrics indicators of a namespace",
        "description": "Retrieve metrics indicators for a specified namespace.",
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "description": "Name of the project",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "path",
            "description": "Name of the cluster",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "description": "Name of the namespace",
            "required": true,
            "type": "string"
          },
          {
            "name": "kind",
            "in": "query",
            "description": "Filter by indicator type",
            "required": false,
            "type": "string"
          },
          {
            "name": "alertEnabled",
            "in": "query",
            "description": "Filter indicators that support alerts",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "multipleEnabled",
            "in": "query",
            "description": "Filter indicators that support multiple alert objects",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "dashboardEnabled",
            "in": "query",
            "description": "Filter indicators that support custom dashboards",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with list of metric indicators",
            "schema": {
              "$ref": "#/definitions/IndicatorList"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "MetricList": {
      "properties": {
        "indicator": {
          "type": "string",
          "description": "The indicator name"
        },
        "query": {
          "type": "string",
          "description": "The native query expression"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricResult"
          }
        }
      }
    },
    "MetricResult": {
      "properties": {
        "metric": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Status": {
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        },
        "status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "code": {
          "type": "integer"
        }
      }
    },
    "Option": {
      "properties": {
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IndicatorList": {
      "properties": {
        "alertEnabled": {
          "type": "boolean",
          "description": "Whether the indicator supports alerts"
        },
        "annotations": {
          "properties": {
            "descriptionEN": {
              "type": "string",
              "description": "English description of the indicator"
            },
            "descriptionZH": {
              "type": "string",
              "description": "Chinese description of the indicator"
            },
            "displayNameEN": {
              "type": "string",
              "description": "English display name of the indicator"
            },
            "displayNameZH": {
              "type": "string",
              "description": "Chinese display name of the indicator"
            }
          }
        },
        "kind": {
          "type": "string",
          "description": "Kind of the indicator"
        },
        "name": {
          "type": "string",
          "description": "Name of the indicator"
        },
        "query": {
          "type": "string",
          "description": "Query string for the indicator"
        },
        "type": {
          "type": "string",
          "description": "Type of the indicator"
        },
        "unit": {
          "type": "string",
          "description": "Unit of the indicator"
        },
        "legend": {
          "type": "string",
          "description": "Legend of the indicator"
        },
        "variables": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Variables used in the query"
        }
      }
    }
  }
}